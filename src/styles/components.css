/* LuvBox Component Styles - SOURCE OF TRUTH for component styling
 * 
 * COMPONENT HIERARCHY:
 * 1. LuvBox House Style (.luvmap-*, .form-*, .modal-*) - USE FIRST
 * 2. shadcn/ui components (/src/elements/) - Restyle with LuvBox classes  
 * 3. Custom components - Follow LuvBox visual identity
 * 
 * BUTTON USAGE EXAMPLES:
 * 
 * React Component (Preferred):
 *   import { Button } from "@/elements/button";
 *   <Button variant="primary" size="large">Save Changes</Button>
 *   <Button variant="secondary" size="small">Cancel</Button>
 * 
 * CSS Classes (Non-React contexts):
 *   <button class="form-button-primary">Save</button>
 *   <button class="form-button-secondary-small">Cancel</button>
 * 
 * FORM USAGE EXAMPLES:
 *   <input class="form-input" placeholder="Enter text..." />
 *   <textarea class="form-textarea" placeholder="Description..." />
 *   <select class="form-select"><option>Choose...</option></select>
 *   <label class="form-label">Field Name</label>
 * 
 * MODAL USAGE EXAMPLES:
 *   import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/elements/dialog";
 *   <DialogContent className="modal-content">
 *     <DialogHeader className="modal-header">
 *       <DialogTitle className="modal-title">Title</DialogTitle>
 *     </DialogHeader>
 *     <div className="modal-footer">
 *       <Button variant="secondary">Cancel</Button>
 *       <Button variant="primary">Confirm</Button>
 *     </div>
 *   </DialogContent>
 * 
 * STANDARDS:
 * - Minimum 48px height for touch accessibility
 * - Always use var(--color-name) from /src/styles/colors.css
 * - Never hardcode colors (#ffffff, rgb(), etc.)
 * - Focus rings required for keyboard navigation
 * 
 * FOR COLORS: See /src/styles/colors.css
 * FOR TYPOGRAPHY: See /src/styles/typography.css
 */

/* === LUVBOX BRAND COMPONENTS === */

.luvmap-brand {
  font-family: 'EB Garamond', serif;
  font-weight: 600;
  font-style: italic;
  color: var(--text-color);
}

/* === LOGO COMPONENTS === */

.app-header-logo {
  display: flex;
  align-items: center;
  gap: 8px;
  text-decoration: none;
}

.app-header-logo:hover .app-header-logo-text {
  opacity: 0.8;
}

/* === LUVBOX SPECIAL BUTTONS === */

/* ========================================
   LUVBOX COMPONENT STYLES - SOURCE OF TRUTH
   ======================================== 
   
   BUTTON USAGE PATTERNS:
   
   React Components (Preferred):
     import { Button } from "@/elements/button";
     <Button variant="primary" size="large">Save</Button>
     <Button variant="secondary" size="small">Cancel</Button>
   
   CSS Classes (Non-React contexts):
     .form-button-primary        // Large primary (48px)
     .form-button-secondary      // Large secondary (48px)  
     .form-button-primary-small  // Small primary (40px)
     .form-button-secondary-small // Small secondary (40px)
   
   FORM USAGE PATTERNS:
     <input className="form-input" />
     <textarea className="form-textarea" />
     <select className="form-select" />
     <label className="form-label" />
   
   MODAL USAGE PATTERNS:
     import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/elements/dialog";
     <DialogContent className="modal-content">
       <DialogHeader className="modal-header">
         <DialogTitle className="modal-title">Title</DialogTitle>
       </DialogHeader>
       <div className="modal-footer">
         <Button variant="secondary">Cancel</Button>
         <Button variant="primary">Confirm</Button>
       </div>
     </DialogContent>
   
   ======================================== */

/* LuvBox brand button - Primary brand component with gradients and shadows */
.luvmap-button {
  background: linear-gradient(to right, var(--blue-200), var(--purple-200));
  position: relative;
  border-radius: 12px;
  cursor: pointer;
  border: none;
  outline: none;
  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  box-shadow: 0px 4px 12px 0px var(--lb-black-900-alpha-25);
  padding: 0;
  overflow: hidden;
  transform: translateY(0);
}

.luvmap-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(to right, var(--blue-300), var(--purple-300));
  border-radius: 12px;
  opacity: 0;
  transition: opacity 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  pointer-events: none;
}

.luvmap-button:hover::before {
  opacity: 1;
}

.luvmap-button:hover {
  box-shadow: 0px 6px 16px 0px var(--lb-black-900-alpha-30);
}

.luvmap-button:active {
  box-shadow: none;
  transform: translateY(2px);
  transition: all 0.1s ease;
}

.luvmap-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: translateY(0);
}

.luvmap-button:disabled::before {
  opacity: 0;
}

.luvmap-button:disabled:hover {
  box-shadow: 0px 4px 12px 0px var(--lb-black-900-alpha-25);
  transform: translateY(0);
}

.luvmap-button:disabled:active {
  box-shadow: 0px 4px 12px 0px var(--lb-black-900-alpha-25);
  transform: translateY(0);
}

.luvmap-button-border {
  position: absolute;
  border: 1px solid oklch(33.74% 0.0114 17.73 / 0.16);
  border-radius: 12px;
  inset: 0;
  pointer-events: none;
  z-index: 2;
}

.luvmap-button-content {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 2;
}

.luvmap-button-inner {
  box-sizing: border-box;
  display: flex;
  flex-direction: row;
  gap: 10px;
  align-items: center;
  justify-content: center;
  padding: 16px 28px;
  position: relative;
  width: 100%;
  min-height: 58px;
}

.luvmap-button-text {
  font-family: 'Source Sans 3', sans-serif;
  font-weight: 600;
  line-height: normal;
  position: relative;
  flex-shrink: 0;
  color: var(--text-color);
  font-size: 20px;
  text-align: center;
  white-space: nowrap;
}

/* Sidebar button classes */
.sidebar-button {
  height: 48px;
  position: relative;
  flex-shrink: 0;
  width: 100%;
  cursor: pointer;
  transition: background-color 0.2s ease;
  border-radius: 12px; /* Ensures consistent rounded corners on hover/active */
}

.sidebar-button:hover {
  background-color: var(--purple-200-alpha-20);
}

.sidebar-button.active {
  background-color: var(--purple-200-alpha-40);
}

.sidebar-button-content {
  display: flex;
  flex-direction: row;
  align-items: center;
  overflow: hidden;
  position: relative;
  height: 100%;
  width: 100%;
}

.sidebar-button-inner {
  box-sizing: border-box;
  display: flex;
  flex-direction: row;
  gap: 16px;
  height: 48px;
  align-items: center;
  justify-content: flex-start;
  padding: 12px;
  position: relative;
  width: 100%;
}

.sidebar-button-text {
  flex-basis: 0;
  font-family: 'Source Sans 3', sans-serif;
  font-weight: 600;
  flex-grow: 1;
  line-height: 1;
  min-height: 1px;
  min-width: 1px;
  position: relative;
  flex-shrink: 0;
  color: var(--text-color);
  font-size: 16px;
  text-align: left;
}

/* Ensure icons are exactly 24x24px and centered */
.sidebar-button .size-6 {
  width: 24px !important;
  height: 24px !important;
  flex-shrink: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}
/* ========================================
   LUVBOX UNIVERSAL COMPONENT SYSTEM
   Consistent styling across all form elements
 ======================================== */

/* Universal Form Element Base */
.luvbox-form-base {
  height: var(--form-height);
  border-radius: var(--form-radius);
  padding: var(--form-padding-y) var(--form-padding-x);
  border: 1px solid var(--form-border);
  background-color: var(--form-bg);
  color: var(--form-text);
  font-size: 1rem;
  transition: all 0.2s ease-in-out;
  width: 100%;
}

.luvbox-form-base::placeholder {
  color: var(--form-placeholder);
}

.luvbox-form-base:focus,
.luvbox-form-base:focus-visible {
  outline: none;
  border-color: var(--form-border-focus);
  box-shadow: 0 0 0 var(--focus-ring-width) rgba(from var(--focus-ring-color) r g b / var(--focus-ring-opacity));
}

.luvbox-form-base:disabled {
  background-color: var(--lb-black-50);
  cursor: not-allowed;
  opacity: 0.6;
}

/* Textarea specific overrides */
textarea.luvbox-form-base {
  height: auto;
  min-height: 120px;
  resize: vertical;
}

/* Universal Select/Dropdown Styling */
.luvbox-select-trigger {
  height: var(--form-height);
  border-radius: var(--form-radius);
  padding: var(--form-padding-y) var(--form-padding-x);
  border: 1px solid var(--form-border);
  background-color: var(--form-bg);
  color: var(--form-text);
  font-size: 1rem;
  transition: all 0.2s ease-in-out;
  width: 100%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.luvbox-select-trigger:focus,
.luvbox-select-trigger:focus-visible,
.luvbox-select-trigger[data-state="open"] {
  outline: none;
  border-color: var(--form-border-focus);
  box-shadow: 0 0 0 var(--focus-ring-width) rgba(from var(--focus-ring-color) r g b / var(--focus-ring-opacity));
}

.luvbox-select-content {
  background-color: var(--dropdown-bg);
  border: 1px solid var(--dropdown-border);
  border-radius: var(--form-radius);
  box-shadow: var(--dropdown-shadow);
  overflow: hidden;
  /* Prevent scroll bar jumping */
  scrollbar-gutter: stable;
}

.luvbox-select-item {
  padding: 8px 12px;
  cursor: pointer;
  transition: background-color 0.15s ease;
  color: var(--form-text);
}

.luvbox-select-item:hover,
.luvbox-select-item:focus {
  background-color: var(--dropdown-item-hover);
  outline: none;
}

/* Universal Button Styling */
.luvbox-button-base {
  border-radius: var(--button-radius);
  font-weight: 500;
  transition: all 0.2s ease-in-out;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  border: none;
  outline: none;
}

.luvbox-button-small {
  height: var(--button-height-small);
  padding: 0 1rem;
  font-size: 0.875rem;
}

.luvbox-button-large {
  height: var(--button-height-large);
  padding: 0 1.5rem;
  font-size: 1.125rem;
}

.luvbox-button-primary {
  background-color: var(--success-green-300);
  color: var(--lb-black-900);
}

.luvbox-button-primary:hover {
  background-color: var(--success-green-400);
}

.luvbox-button-primary:focus-visible {
  box-shadow: 0 0 0 var(--focus-ring-width) rgba(from var(--success-green-400) r g b / var(--focus-ring-opacity));
}

.luvbox-button-secondary {
  background-color: transparent;
  color: var(--lb-black-700);
  border: 1px solid var(--lb-black-300);
}

.luvbox-button-secondary:hover {
  background-color: var(--lb-black-50);
  color: var(--lb-black-900);
  border-color: var(--lb-black-400);
}

.luvbox-button-secondary:focus-visible {
  box-shadow: 0 0 0 var(--focus-ring-width) rgba(from var(--lb-black-400) r g b / var(--focus-ring-opacity));
}

/* Universal Interactive Element Styling */
.luvbox-interactive-base {
  height: var(--interactive-height);
  border-radius: var(--interactive-radius);
  transition: all 0.2s ease-in-out;
  outline: none;
}

.luvbox-interactive-base:focus-visible {
  box-shadow: 0 0 0 var(--focus-ring-width) rgba(from var(--focus-ring-color) r g b / var(--focus-ring-opacity));
}

/* Universal Interactive States */
.luvbox-interactive-hover:hover {
  background-color: var(--interactive-hover);
  transition: var(--interactive-transition);
}

.luvbox-interactive-active {
  background-color: var(--interactive-active);
}

/* Accordion/Collapsible Interactive States */
.luvbox-accordion-trigger {
  transition: var(--interactive-transition);
}

.luvbox-accordion-trigger:hover {
  background-color: var(--interactive-hover);
}

.luvbox-accordion-trigger[data-state="open"] {
  background-color: var(--interactive-active);
}

/* Tab Interactive States */
.luvbox-tab-trigger {
  transition: var(--interactive-transition);
}

.luvbox-tab-trigger:hover {
  background-color: var(--interactive-hover);
}

.luvbox-tab-trigger[data-state="active"] {
  background-color: var(--interactive-active);
}

/* Menu Item Interactive States */
.luvbox-menu-item {
  transition: var(--interactive-transition);
  cursor: pointer;
}

.luvbox-menu-item:hover {
  background-color: var(--interactive-hover);
}

.luvbox-menu-item[data-state="active"] {
  background-color: var(--interactive-active);
  font-weight: 600;
}

/* Universal Card/Container Styling */
.luvbox-card-base {
  border-radius: var(--card-radius);
  border: 1px solid var(--card-border);
  background-color: var(--card-bg);
  box-shadow: var(--card-shadow);
}

/* Universal Dialog/Modal Styling */
.luvbox-dialog-base {
  border-radius: var(--dialog-radius);
  border: 1px solid var(--dialog-border);
  background-color: var(--dialog-bg);
  box-shadow: var(--dialog-shadow);
}

.luvbox-dialog-overlay {
  background-color: var(--dialog-overlay);
}

/* Universal Dropdown/Menu Styling */
.luvbox-dropdown-base {
  background-color: var(--dropdown-bg);
  border: 1px solid var(--dropdown-border);
  border-radius: var(--form-radius);
  box-shadow: var(--dropdown-shadow);
  overflow: hidden;
  scrollbar-gutter: stable;
}

.luvbox-dropdown-item {
  padding: 8px 12px;
  cursor: pointer;
  transition: background-color 0.15s ease;
  color: var(--form-text);
}

.luvbox-dropdown-item:hover,
.luvbox-dropdown-item:focus {
  background-color: var(--dropdown-item-hover);
  outline: none;
}

/* Form Components - Updated to align with LuvBox Button System */
.form-button-primary {
  background-color: var(--success-green-500);
  color: var(--lb-black-900);
  border: 2px solid var(--success-green-500);
  padding: 0.75rem 1.5rem;
  border-radius: 0.375rem;
  font-weight: 500;
  font-size: 1.125rem;
  min-height: 48px;
  transition: all 0.2s ease-in-out;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
}

.form-button-primary:hover {
  background-color: var(--success-green-600);
  border-color: var(--success-green-600);
}

.form-button-primary:focus {
  outline: none;
  ring: 2px;
  ring-color: var(--success-green-400);
  ring-offset: 2px;
}

.form-button-primary:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.form-button-secondary {
  background-color: var(--lb-black-100);
  color: var(--lb-black-900);
  border: 2px solid var(--lb-black-300);
  padding: 0.75rem 1.5rem;
  border-radius: 0.375rem;
  font-weight: 500;
  font-size: 1.125rem;
  min-height: 48px;
  transition: all 0.2s ease-in-out;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
}

.form-button-secondary:hover {
  background-color: var(--lb-black-200);
  border-color: var(--lb-black-400);
  color: var(--lb-black-900);
}

.form-button-secondary:focus {
  outline: none;
  ring: 2px;
  ring-color: var(--lb-black-400);
  ring-offset: 2px;
}

.form-button-secondary:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  background-color: var(--lb-black-100);
}

/* Small button variants */
.form-button-primary-small {
  background-color: var(--success-green-500);
  color: var(--lb-black-900);
  border: 2px solid var(--success-green-500);
  padding: 0.5rem 1rem;
  border-radius: 0.375rem;
  font-weight: 500;
  font-size: 0.875rem;
  min-height: 40px;
  transition: all 0.2s ease-in-out;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
}

.form-button-primary-small:hover {
  background-color: var(--success-green-600);
  border-color: var(--success-green-600);
}

.form-button-secondary-small {
  background-color: var(--lb-black-100);
  color: var(--lb-black-900);
  border: 2px solid var(--lb-black-300);
  padding: 0.5rem 1rem;
  border-radius: 0.375rem;
  font-weight: 500;
  font-size: 0.875rem;
  min-height: 40px;
  transition: all 0.2s ease-in-out;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
}

.form-button-secondary-small:hover {
  background-color: var(--lb-black-200);
  border-color: var(--lb-black-400);
  color: var(--lb-black-900);
}

/* Form Input Components - Consistent Styling */
.form-input {
  width: 100%;
  padding: 0.5rem 1rem;
  border: 1px solid var(--lb-black-200);
  border-radius: 0.75rem;
  background-color: var(--lb-black-0);
  color: var(--lb-black-900);
  font-size: 1rem;
  height: 40px;
  transition: all 0.2s ease-in-out;
}

.form-input:focus {
  outline: none;
  border-color: var(--blue-500);
  box-shadow: 0 0 0 2px var(--blue-200);
}

.form-input:disabled {
  background-color: var(--lb-black-50);
  cursor: not-allowed;
  opacity: 0.6;
}

.form-input::placeholder {
  color: var(--lb-black-400);
}

.form-textarea {
  width: 100%;
  padding: 0.75rem 1rem;
  border: 1px solid var(--lb-black-200);
  border-radius: 0.75rem;
  background-color: var(--lb-black-0);
  color: var(--lb-black-900);
  font-size: 1rem;
  min-height: 120px;
  resize: vertical;
  transition: all 0.2s ease-in-out;
  font-family: inherit;
}

.form-textarea:focus {
  outline: none;
  border-color: var(--blue-500);
  box-shadow: 0 0 0 2px var(--blue-200);
}

.form-textarea:disabled {
  background-color: var(--lb-black-50);
  cursor: not-allowed;
  opacity: 0.6;
  resize: none;
}

.form-textarea::placeholder {
  color: var(--lb-black-400);
}

/* Enhanced form select that works with shadcn/ui Select */
.form-select {
  width: 100%;
  height: 40px;
  padding: 0.5rem 1rem;
  border: 1px solid var(--lb-black-200) !important;
  border-radius: 0.75rem !important;
  background-color: var(--lb-black-0) !important;
  color: var(--lb-black-900) !important;
  font-size: 1rem !important;
  transition: all 0.2s ease-in-out !important;
  cursor: pointer;
}

.form-select:focus,
.form-select[data-state="open"] {
  outline: none !important;
  border-color: var(--blue-500) !important;
  box-shadow: 0 0 0 2px var(--blue-200) !important;
}

.form-select:disabled {
  background-color: var(--lb-black-50) !important;
  cursor: not-allowed;
  opacity: 0.6;
}

/* For native select elements */
select.form-select {
  width: 100%;
  padding: 0.5rem 1rem;
  border: 1px solid var(--lb-black-200);
  border-radius: 0.75rem;
  background-color: var(--lb-black-0);
  color: var(--lb-black-900);
  font-size: 1rem;
  height: 40px;
  transition: all 0.2s ease-in-out;
  cursor: pointer;
}

select.form-select:focus {
  outline: none;
  border-color: var(--blue-500);
  box-shadow: 0 0 0 2px var(--blue-200);
}

select.form-select:disabled {
  background-color: var(--lb-black-50);
  cursor: not-allowed;
  opacity: 0.6;
}

.form-label {
  display: block;
  font-weight: 500;
  font-size: 1rem;
  color: var(--lb-black-800);
  margin-bottom: 0.5rem;
}

.form-label-large {
  display: block;
  font-weight: 500;
  font-size: 1.125rem;
  color: var(--lb-black-800);
  margin-bottom: 0.75rem;
}

/* Dialog Styles - Consistent Modal Patterns */
.questionnaire-choice-dialog {
  background-color: var(--lb-black-0) !important;
  border: 1px solid var(--lb-black-200) !important;
  border-radius: 0.75rem !important;
  color: var(--lb-black-900) !important;
}

/* Apply modal styling directly to dialog content elements */
[data-slot="dialog-content"],
[data-slot="alert-dialog-content"] {
  background-color: var(--lb-black-0) !important;
  border: 1px solid var(--lb-black-200) !important;
  border-radius: 0.75rem !important;
  color: var(--lb-black-900) !important;
}

/* Force center positioning for all dialogs */
[data-slot="dialog-content"],
[data-slot="alert-dialog-content"] {
  position: fixed !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  z-index: 50 !important;
  margin: 0 !important;
}

/* Prevent scrollbar compensation padding that causes layout jump */
/* Use the most aggressive approach to prevent any padding */
body {
  padding-right: 0 !important;
  margin-right: 0 !important;
}

body[data-scroll-locked] {
  padding-right: 0 !important;
  margin-right: 0 !important;
  overflow: visible !important;
}

/* Prevent Radix from adding padding to body when dialog is open */
body:has([data-slot="dialog-overlay"]),
body:has([data-slot="alert-dialog-overlay"]) {
  padding-right: 0 !important;
  margin-right: 0 !important;
  overflow: visible !important;
}

/* Additional selectors to catch all possible scrollbar compensation */
html[data-scroll-locked],
html:has([data-radix-scroll-area-viewport]) {
  padding-right: 0 !important;
  margin-right: 0 !important;
}

/* Ensure no padding is added to any element when modals are open */
*[data-scroll-locked],
*:has([data-radix-dialog-content]),
*:has([data-radix-alert-dialog-content]) {
  padding-right: 0 !important;
  margin-right: 0 !important;
}

/* Target specific Radix classes that might be applied */
.radix-dialog-overlay ~ body,
.radix-alert-dialog-overlay ~ body,
body[style*="padding-right"] {
  padding-right: 0 !important;
}

.modal-header {
  text-align: center;
  margin-bottom: 1.5rem;
}

.modal-title {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--lb-black-900);
  margin-bottom: 1rem;
}

.modal-description {
  font-size: 1.125rem;
  color: var(--lb-black-700);
  line-height: 1.6;
}

.modal-footer {
  display: flex;
  gap: 1rem;
  justify-content: center;
  margin-top: 2rem;
  flex-wrap: wrap;
}

@media (min-width: 640px) {
  .modal-footer {
    flex-wrap: nowrap;
  }
}

/* Form Error Text */
.form-error-text {
  font-family: 'Source Sans 3', sans-serif;
  font-size: var(--app-text-base);
  line-height: var(--app-leading-base);
  color: var(--caution-red-600);
  margin-top: 0.5rem;
}

/* Cube 3D Styles */
.preserve-3d {
  transform-style: preserve-3d;
}

.backface-hidden {
  backface-visibility: hidden;
}

.cube-face {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0.95;
  display: flex;
  align-items: center;
  justify-content: center;
}

.face-content {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

.cube-container {
  perspective: 1000px;
  transition: transform 0.6s;
  cursor: pointer;
}

.cube-container:active {
  transform: scale(0.95);
  transition: transform 0.1s;
}
